{
  
  "Antd table columns": {
    "prefix": "a-columns",
    "description": "Antd table columns",
    "body": [
      "const columns = [",
      "  {",
      "    title: '',",
      "    dataIndex: '',",
      "    key: '',",
      "    render: () => {},",
      "  },",
      "  {",
      "    title: '',",
      "    dataIndex: '',",
      "    key: '',",
      "    width: '',",
      "    align: '',",
      "    filters: [",
      "     {           ",
      "       text: 'Jim',",
      "       value: 'Jim',",
      "     }, ",
      "     {",
      "       text: 'Submenu',",
      "       value: 'Submenu',",
      "       children: [",
      "         {",
      "           text: 'Black',",
      "           value: 'Black',",
      "         },",
      "       ],",
      "     },",
      "    ],",
      "    onFilter: (value, record) => record.name.indexOf(value) === 0,",
      "    sorter: (a, b) => a.name.length - b.name.length,",
      "    sortDirections: ['descend'],",
      "    scopedSlots: { customRender: '' },",
      "    render: () => {},",
      "  },",
      "]"
    ]
  },
  "Antd table rowSelection": {
    "prefix": "a-rowSelection",
    "description": "Antd table rowSelection",
    "body": [
      "const rowSelection = {",
      "  type: 'checkbox',",
      "  onChange: (selectedRowKeys, selectedRows) => '$1'",
      "}"
    ]
  },
  "Antd table pagination": {
    "prefix": "a-table:pagination",
    "description": "Antd table pagination",
    "body": [
      "const pagination = {",
      "  current: 1,",
      "  pageSize: 10,",
      "  pageSizeOptions: ['10', '20', '30', '40'],",
      "  showQuickJumper: true,",
      "  showSizeChanger: true,",
      "  showTotal: true,",
      "  total: 10,",
      "  change: (page, pageSize)=>{},",
      "  showSizeChange: (current, size)=>{},",
      "}"
    ]
  },
  "Antd base success message": {
    "prefix": "baseMessage:success",
    "description": "Base success message",
    "body": [
      "this.$baseMessage($1)"
    ]
  },
  "Antd base warning message": {
    "prefix": "baseMessage:warning",
    "description": "Base warning message",
    "body": [
      "this.$baseMessage($1,'warning')"
    ]
  },
  "Antd base confirm": {
    "prefix": "baseConfirm",
    "description": "Base warning message",
    "body": [
      "this.$baseConfirm({",
      "  title: '$1',",
      "  content: '$2',",
      "  confirmLoading: this.submitLoading,",
      "  centered: true,",
      "  okText: '确认',",
      "  cancelText: '取消',",
      " onOk: () => {",
      "    return new Promise(async (resolve) => {",
      "      $3",
      "      resolve();",
      "    });",
      "  },",
      "  oncancel: () => {$4}",
      " });"
    ]
  },
  "Antd base icon confirm": {
    "prefix": "baseConfirm:icon",
    "description": "Base icon confirm",
    "body": [
      "this.$baseConfirm({",
      "  title: '$1',",
      "  content: '$2',",
      "  centered: true,",
      "  icon: () =>",
      "    this.$createElement('a-icon', {",
      "      props: {",
      "       type: 'exclamation-circle',",
      "       theme: 'filled',",
      "      },",
      "   }),",
      "  confirmLoading: this.submitLoading,",
      "  okText: '确认',",
      "  cancelText: '取消',",
      "  onOk: () => {",
      "    return new Promise(async (resolve) => {",
      "      $3",
      "      resolve();",
      "    });",
      "  },",
      "  oncancel: () => {$4}",
      "});"
    ]
  },
  "Antd base error message": {
    "prefix": "baseMessage:error",
    "description": "Base error message",
    "body": [
      "this.$baseMessage($1,'error')"
    ]
  },
  "Antd info message": {
    "prefix": "a-message:info",
    "description": "Antd info message",
    "body": [
      "message.info($1)"
    ]
  },
  "Antd error message": {
    "prefix": "a-message:error",
    "description": "Antd error message",
    "body": [
      "message.error($1)"
    ]
  },
  "Antd warning message": {
    "prefix": "a-message:warning",
    "description": "Antd warning message",
    "body": [
      "message.warning($1)"
    ]
  },
  "Antd success message": {
    "prefix": "a-message:success",
    "description": "Antd success message",
    "body": [
      "message.success($1)"
    ]
  },
  "Antd form submit": {
    "prefix": "a-form:submit",
    "description": "Antd form submit",
    "body": [
      "this.antdform.validateFieldsAndScroll(async (error, values) => {",
      " if(!errors){",
      "   $1",
      " }",
      "});"
    ]
  },
  "Antd form clear": {
    "prefix": "a-form:submit",
    "description": "Antd form submit",
    "body": "this.antdform.resetFields()"
  },
  "Antd rules": {
    "prefix": "a-rules",
    "body": [
      "{",
      " initialValue: '$1',",
      " validateTrigger: 'blur',",
      " rules: [",
      "   { required: true, message: '$1',whitespace: true },",
      " ]",
      "}"
    ]
  },
  "Antd rules array": {
    "prefix": "a-rules:array",
    "body": "{ type: 'array', required: true, message: '请至少选择一个', whitespace: true }"
  },
  "Antd rules date": {
    "prefix": "a-rules:date",
    "body": "{ type: 'date', required: true, message: '请选择日期' }"
  },
  "Antd rules minMax": {
    "prefix": "a-rules:minMax",
    "body": "{require: true, min: 3, max: 5, message: '长度在 3 到 5 个字符', whitespace: true }"
  },
  "Antd rules required": {
    "prefix": "a-rules:required",
    "body": "{required: true, message:'请输入',whitespace: true}"
  },
  "Antd rules self": {
    "prefix": "a-rules:self",
    "body": "{ validator: validatePass}"
  },
  "Antd rules selfmethod": {
    "prefix": "a-rules:selfmethod",
    "body": [
      "var validatePass = (_, value, callback) => {",
      "\tif (value === '') {",
      "\t\tcallback('值不能为空');",
      "\t} else {",
      "\t\tcallback();",
      "\t}",
      "}"
    ]
  },
  "reg hz": {
    "prefix": "reg-hz",
    "description":"数字、字母、下划线以及汉字组合",
    "body": "/^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/"
  },
  "reg-ip": {
    "prefix": "reg:ip",
    "body": "/^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\"
  },
  "reg-port": {
    "prefix": "reg:port",
    "body": "/^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/"
  }
}